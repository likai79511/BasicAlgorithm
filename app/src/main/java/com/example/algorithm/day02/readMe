day02： 动态数组

数据结构概要

基础的数据结构 可分为以下几类：（这些之后都会逐步介绍）

1. 线性结构：  数组、栈、队列、链表、哈希表..

2. 树形结构：  二叉树、二分搜索树、AVL、红黑树、Treap、Splay、堆、Trie、线段树、并查集、哈夫曼树...

3. 图结构：    邻接矩阵、邻接表


使用场景：

操作系统中：
优先队列：对所有进程进行管理
内存管理：内存堆栈
文件管理
文件压缩：比如 哈夫曼树。

数组：把数据码成一排进行存放。使用编号/索引 进行查找遍历，[0,n-1]
优点：查询快，因为数组是连续的，所以只需要一次寻址，然后通过索引去快速查找。
缺点：因为数据内存要保持连续性，所以每次创建数组需要开辟固定大小的空间，所以大小固定，不像链表那样 可以动态扩容。
特点：查询快，删除慢，因为删除其中的一个数据，需要做后面的数据向前平移/覆盖 来保证数据连续性。
延伸：对数组进行封装，实现动态扩容的功能（静默扩容：创建一个新的更大的数组，将原本的copy进去）。

链表：通过额外信息，将节点关联起来。
优点：可以动态扩容， 因为每次添加节点 都会从内存中开辟一个新的空间，然后关联起来。
缺点：查询慢（每次需要从next节点寻址去找）, 内存占用大（额外存储节点的信息）。
特点：查询慢，删除快（只需要两个节点的next引用变更），动态。
链表：双向链表。


